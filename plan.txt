we will use latex. asciimath is not powerful enough
\Box will handle blank terms, so an error never arises

2022-07-17(0)05:05:53-0400
honestly the biggest problem is navigation, and the biggest problem with that is the arrow keys are hard to reach

we have three options
1. vim-like normal/visual insert dichotomy
2. modifier key accesses normal/visual layer
3. navigation is neatly confined to to, backspace, enter, space

that's all. not even f keys are allowed. modifiers are allowed but modifiers + those keys tend to not work on terminal

i favour option 2, it seems the fastest

2022-07-18(1)01:34:57-0400
difficult navigation problems
+, -, *, / should be variadic, of course. it's more intuitive
but then say i want to change a + to -, or just navigate among the operators, that's kind of difficult now
requires more significant restructuring

2022-07-18(1)01:37:42-0400
reordering, fFtT, etc. are important things that can greatly improve over pen and paper
and copy-paste, of course

2022-07-18(1)15:20:18-0400
a thing to delete the enclosing thing (e.x. sum _ ^ ...) and free/keep the other stuff, idk

2022-07-18(1)21:28:13-0400
the solution is that + - * / should not be operators, they should be data

2022-07-19(2)02:16:26-0400
not only should highlight up and down be a thing, and moving highlight left and right, but extending highlight left and right, like shift-arrowkeys in Word, but with a better shortcut

perhaps something like 'highlight left and right, but stop before any special ops, e.x. to highlight a term in a linear combination

2022-07-19(2)02:23:54-0400
we need a fast unshifted hotkey for subscripts, and possibly exponentiation too

2022-07-22(5)14:11:05-0400
    # LEH i'm struggling to determine how list insertion should work
    # implementing a cursor, index, and iaIA mechanic is probably the best way to go
    # then a list CAN be focused, and when it's focused there is an index that tells you where to insert
    # but there is no dedicated insert mode
    # pressing iaIA just focuses the list in this intermediate fashion
    # and then navigating up once focuses the entire list

a different solution has been reached: a single hotkey inserts a blank to the left of any list element

2022-07-22(5)14:15:12-0400
list highlighting will be a background, to differentiate from highlighting elements in the list

2022-07-24(0)00:05:49-0400
it is easier to navigate upward than downward. this is why a special case for insert_data exists, when a whole list is currently focused

2022-07-24(0)01:27:40-0400
the USER is ALWAYS in control of exactly what happens
or, pretty much that
it's not perfectly absolute of course
but i decide what gets subscripted, etc.
however speed is still retained
predictability is the most important factor in order to achieve speed
more control is more predictability

2022-07-26(2)03:46:29-0400
the next step must be selections, i.e. multiple focused things
contiguously focused expressions
copy-paste, moving, etc.

2022-07-27(3)05:01:30-0400
the python-latex-xdvi setup has been instructive (the python part), but the latex-dvi part must be scrapped and replaced with a proper from-scratch gui
the time it takes to compile latex is unacceptable
it is not difficult to display equations in 2 dimensions, although it is difficult to do so nicely
we don't need it to look nice
the final product will look like this:
- a gui displays the equation in real time
- a latex file is written in real time
- at the end the latex file is handed to the user, a permanent and better formatted copy

also i'm beginning to favor a vim-like insert/visual/normal mode-based ui
always being in visual mode poses weird challenges that complicate things
there should be a cursor. additionally this should not be hard to achieve in a from-scratch gui
however i also believe that it should be easy to do basic navigation in insert-mode only
additionally the navigation methods for typed math will obviously be different from pen-and-paper math, however it should still be just as fast or faster
